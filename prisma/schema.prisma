// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  USR_UserId    Int    @id @default(autoincrement())
  USR_Username  String @unique
  USR_Name      String
  USR_Password  String
  USR_Address   String
  USR_Seller    Boolean
  products      Product[]
  sales         Sale[]
  shoppingCarts shoppingCart[]
  assesments Assessment[]

  @@map("users")
}

model Product {
  PRD_ProductId Int  @id @default(autoincrement())
  PRD_Price     Int
  PRD_Name      String
  PRD_stock     Int
  PRD_Seller    Int
  user          User @relation(fields: [PRD_Seller], references: [USR_UserId])
  shoppingCarts shoppingCart[]
  product       ProductSale[]
  assements     Assessment[]

  @@map("products")
}

model Sale {
  SLE_SaleId   Int      @id @default(autoincrement())
  SLE_DateSale DateTime @default(now())
  SLE_Value    Int
  SLE_Buyer    Int
  buyer        User     @relation(fields: [SLE_Buyer], references: [USR_UserId])
  productsSale ProductSale[]

  @@map("sales")
}

model ProductSale {
  PRD_ProductSaleId Int     @id @default(autoincrement())
  PRS_SaleId        Int
  PRS_ProductId     Int
  PRS_Quantity      Int     @default(1)
  product           Product @relation(fields: [PRS_ProductId], references: [PRD_ProductId], onDelete: Cascade, onUpdate: Cascade)
  sale              Sale    @relation(fields: [PRS_SaleId], references: [SLE_SaleId])

  @@map("product_sales")
}

model shoppingCart {
  SHP_ShoppingCartId Int     @id @default(autoincrement())
  SHP_UserID         Int
  SHP_ProductId      Int     
  SHP_Quantity       Int     @default(1)
  user               User    @relation(fields: [SHP_ShoppingCartId], references: [USR_UserId])
  product            Product @relation(fields: [SHP_ProductId], references: [PRD_ProductId])

  @@map("shopping_cart")
}

model Assessment {
  ASS_AssesmentId Int  @id @default(autoincrement())
  ASS_UserId      Int
  ASS_Rating      Int  @default(0)
  ASS_Description String
  ASS_ProductId   Int
  user            User @relation(fields: [ASS_UserId], references: [USR_UserId])
  product         Product @relation(fields: [ASS_ProductId], references: [PRD_ProductId])

  @@map("assesment")
}